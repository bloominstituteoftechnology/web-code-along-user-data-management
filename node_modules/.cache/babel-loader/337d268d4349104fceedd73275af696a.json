{"ast":null,"code":"var _jsxFileName = \"/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport _uglyData from \"./utils/uglify\";\nimport { sortByKey } from \"./utils/sorting\";\nimport { cleanupUndefinedKeys, cleanDates } from './utils/data-clean';\nimport { filter } from \"./utils/filtering\";\nimport User from \"./components/User\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [initialData] = useState(_uglyData);\n  const [uglyData, setUglyData] = useState(initialData);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [field, setField] = useState('');\n  const [userCount, setUserCount] = useState(initialData.length);\n\n  const rtt = () => {\n    document.documentElement.scrollTop = 0;\n  };\n\n  const resetData = () => {\n    setUglyData(initialData);\n  };\n\n  const sortGeneric = (arr, key) => {\n    const newData = sortByKey(arr, key);\n    setUglyData(newData);\n  };\n\n  const dateCleaner = async arr => {\n    const newData = await cleanDates(arr);\n    setUglyData(newData);\n  };\n\n  const keyCleaner = async arr => {\n    const newData = await cleanupUndefinedKeys(arr);\n    setUglyData(newData);\n  };\n\n  const searchTermSetter = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const fieldSetter = e => {\n    setField(e.target.value);\n  };\n\n  const search = async e => {\n    e.preventDefault();\n    const newData = await filter(uglyData, field, searchTerm);\n    setUglyData(newData);\n  }; // IMPLEMENT 2.1 STEP 3\n\n\n  const countUsers = arr => {\n    const reduce = arr.reduce(accumulator => {\n      return accumulator += 1;\n    }, 0);\n    setUserCount(reduce);\n    return reduce;\n  }; // IMPLEMENT 2.1 STEP 3\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dateCleaner([...uglyData]),\n        children: \"Fix date values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => keyCleaner([...uglyData]),\n        children: \"Clean unformatted string values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: search,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"searchTerm\",\n          type: \"text\",\n          onChange: searchTermSetter,\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"field\",\n          onChange: fieldSetter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"company\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resetData(),\n        children: \"Reset data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortGeneric([...uglyData], \"email\"),\n        children: \"Sort data by email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortGeneric([...uglyData], \"username\"),\n        children: \"Sort data by username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortGeneric([...uglyData], \"lastName\"),\n        children: \"Sort data by last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortGeneric([...uglyData], \"dob\"),\n        children: \"Sort data by dob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sortGeneric([...uglyData], \"state\"),\n        children: \"Sort data by state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-count\",\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Users: \", userCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => countUsers(uglyData),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: uglyData.map(user => {\n        return /*#__PURE__*/_jsxDEV(User, {\n          user: user\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"rtt\",\n      onClick: rtt,\n      children: \"Return to Top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WPpyaRAMQ2xbDhMj+8Sfhd2/HtY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/App.js"],"names":["React","useState","_uglyData","sortByKey","cleanupUndefinedKeys","cleanDates","filter","User","App","initialData","uglyData","setUglyData","searchTerm","setSearchTerm","field","setField","userCount","setUserCount","length","rtt","document","documentElement","scrollTop","resetData","sortGeneric","arr","key","newData","dateCleaner","keyCleaner","searchTermSetter","e","target","value","fieldSetter","search","preventDefault","countUsers","reduce","accumulator","map","user","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport _uglyData from \"./utils/uglify\";\nimport { sortByKey } from \"./utils/sorting\";\nimport { cleanupUndefinedKeys, cleanDates } from './utils/data-clean';\nimport { filter } from \"./utils/filtering\";\nimport User from \"./components/User\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [initialData] = useState(_uglyData);\n  const [uglyData, setUglyData] = useState(initialData);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [field, setField] = useState('');\n  const [userCount, setUserCount] = useState(initialData.length);\n\n  const rtt = () => {\n    document.documentElement.scrollTop = 0;\n  };\n\n  const resetData = () => {\n    setUglyData(initialData);\n  };\n\n  const sortGeneric = (arr, key) => {\n    const newData = sortByKey(arr, key);\n    setUglyData(newData);\n  };\n\n  const dateCleaner = async (arr) => {\n    const newData = await cleanDates(arr);\n    setUglyData(newData);\n  };\n\n  const keyCleaner = async (arr) => {\n    const newData = await cleanupUndefinedKeys(arr);\n    setUglyData(newData);\n  };\n\n  const searchTermSetter = (e) => {\n    setSearchTerm(e.target.value);\n  }\n\n  const fieldSetter = (e) => {\n    setField(e.target.value);\n  }\n\n  const search = async (e) => {\n    e.preventDefault();\n    const newData = await filter(uglyData, field, searchTerm);\n    setUglyData(newData);\n  }\n\n  // IMPLEMENT 2.1 STEP 3\n  const countUsers = (arr) => {\n    const reduce = arr.reduce((accumulator) => {\n      return accumulator += 1;\n    }, 0);\n\n    setUserCount(reduce);\n    return reduce;\n  }\n  // IMPLEMENT 2.1 STEP 3\n\n  return (\n    <div className=\"container\">\n      <h1>List of Users</h1>\n\n      <div className=\"button-container\">\n        <button onClick={() => dateCleaner([...uglyData])}>\n          Fix date values\n        </button>\n\n        <button onClick={() => keyCleaner([...uglyData])}>\n          Clean unformatted string values\n        </button>\n\n        <form onSubmit={search}>\n          <input name=\"searchTerm\" type=\"text\" onChange={searchTermSetter} placeholder=\"Search...\" />\n          \n          <select name=\"field\" onChange={fieldSetter}>\n            <option value=\"\">Field</option>\n            <option value=\"name\">Name</option>\n            <option value=\"username\">Username</option>\n            <option value=\"email\">Email</option>\n            <option value=\"company\">Company</option>\n            <option value=\"address\">Address</option>\n          </select>\n          \n          <button type=\"submit\">Submit</button>\n        </form>\n\n        <button onClick={() => resetData()}>Reset data</button>\n      </div>\n\n      <div className=\"button-container\">\n        <button onClick={() => sortGeneric([...uglyData], \"email\")}>\n          Sort data by email\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], \"username\")}>\n          Sort data by username\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], \"lastName\")}>\n          Sort data by last name\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], \"dob\")}>\n          Sort data by dob\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], \"state\")}>\n          Sort data by state\n        </button>\n      </div>\n\n      <div id=\"user-count\" className=\"button-container\">\n        <h2>Users: {userCount}</h2>\n        <button onClick={() => countUsers(uglyData)}>Update</button>\n      </div>\n\n      {/* IMPLEMENT 2.1 STEP 1 */}\n      <div className=\"users-container\">\n        {uglyData.map((user) => {\n          return <User key={user.id} user={user} />;\n        })}\n      </div>\n      {/* IMPLEMENT 2.1 STEP 1 */}\n\n      <p className=\"rtt\" onClick={rtt}>\n        Return to Top\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}