{"ast":null,"code":"var _jsxFileName = \"/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport _uglyData from \"./utils/uglify\";\nimport { cleanupUndefinedKeys, cleanDates } from \"./utils/data-clean\";\nimport { sortByKey // sortByEmail,\n// sortByUsername,\n// sortByLastName,\n// sortByDOB,\n// sortByState,\n} from \"./utils/sorting\";\nimport { filterByNameEmail } from './utils/filtering';\nimport User from \"./components/User\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [initialData] = useState(_uglyData);\n  const [uglyData, setUglyData] = useState(initialData);\n  const [optionsState, setOptionsState] = useState(\"\");\n\n  const rtt = () => {\n    document.documentElement.scrollTop = 0;\n  };\n\n  const resetData = () => {\n    setUglyData(initialData);\n  };\n\n  const keyCleaner = async arr => {\n    const newData = await cleanupUndefinedKeys(arr);\n    setUglyData(newData);\n    return newData;\n  };\n\n  const dateCleaner = async arr => {\n    const newData = await cleanDates(arr);\n    setUglyData(newData);\n    return newData;\n  }; // step 1\n  // const sortEmail = (arr) => {\n  //   const newData = sortByEmail(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n  // const sortUsername = (arr) => {\n  //   const newData = sortByUsername(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n  // const sortLastName = (arr) => {\n  //   const newData = sortByLastName(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n  // const sortDOB = (arr) => {\n  //   const newData = sortByDOB(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n  // const sortState = (arr) => {\n  //   const newData = sortByState(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n  // step 2\n  // const sorter = (arr, type) => {\n  //   let newData;\n  //   switch (type) {\n  //     case \"email\":\n  //       newData = sortByEmail(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"username\":\n  //       newData = sortByUsername(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"lastName\":\n  //       newData = sortByLastName(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"dob\":\n  //       sortByDOB(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"state\":\n  //       sortByState(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   return newData;\n  // };\n  // step 3\n\n\n  const sortGeneric = (arr, key) => {\n    const newData = sortByKey(arr, key);\n    setUglyData(newData);\n    return newData;\n  };\n\n  const filterGeneric = () => {\n    const newData = filterByNameEmail(uglyData, optionsState);\n    setUglyData(newData);\n    return newData;\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setOptionsState(e.target.value);\n    return e.target.value;\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newData = filterGeneric();\n    return newData;\n  };\n\n  return (\n    /*#__PURE__*/\n    // ADD className VALUE IN STEP 1.1\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"main-header\",\n        children: \"List of Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-key-cleaner\",\n          onClick: () => keyCleaner([...uglyData]),\n          children: \"Clean unformatted string values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-date-cleaner\",\n          onClick: () => dateCleaner([...uglyData]),\n          children: \"Fix date values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            placeholder: \"type here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-submit\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-reset\",\n          onClick: () => resetData(),\n          children: \"Reset data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortGeneric([...uglyData], 'email'),\n          children: \"Sort data by email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortGeneric([...uglyData], 'username'),\n          children: \"Sort data by username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortGeneric([...uglyData], 'lastName'),\n          children: \"Sort data by last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortGeneric([...uglyData], 'dob'),\n          children: \"Sort data by dob\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortGeneric([...uglyData], 'state'),\n          children: \"Sort data by state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-container\",\n        children: uglyData.map(user => {\n          return /*#__PURE__*/_jsxDEV(User, {\n            user: user\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rtt\",\n        onClick: rtt,\n        children: \"Return to Top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"0WoNk2sDiBe4eZYS2jCBFW3BY10=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/App.js"],"names":["React","useState","_uglyData","cleanupUndefinedKeys","cleanDates","sortByKey","filterByNameEmail","User","App","initialData","uglyData","setUglyData","optionsState","setOptionsState","rtt","document","documentElement","scrollTop","resetData","keyCleaner","arr","newData","dateCleaner","sortGeneric","key","filterGeneric","handleChange","e","preventDefault","target","value","onSubmit","map","user","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport _uglyData from \"./utils/uglify\";\nimport { cleanupUndefinedKeys, cleanDates } from \"./utils/data-clean\";\nimport {\n  sortByKey,\n  // sortByEmail,\n  // sortByUsername,\n  // sortByLastName,\n  // sortByDOB,\n  // sortByState,\n} from \"./utils/sorting\";\nimport { filterByNameEmail } from './utils/filtering';\n\nimport User from \"./components/User\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [initialData] = useState(_uglyData);\n  const [uglyData, setUglyData] = useState(initialData);\n  const [optionsState, setOptionsState] = useState(\"\");\n\n  const rtt = () => {\n    document.documentElement.scrollTop = 0;\n  }\n\n  const resetData = () => {\n    setUglyData(initialData);\n  }\n\n  const keyCleaner = async (arr) => {\n    const newData = await cleanupUndefinedKeys(arr);\n    setUglyData(newData);\n    return newData;\n  };\n\n  const dateCleaner = async (arr) => {\n    const newData = await cleanDates(arr);\n    setUglyData(newData);\n    return newData;\n  };\n\n  // step 1\n  // const sortEmail = (arr) => {\n  //   const newData = sortByEmail(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n\n  // const sortUsername = (arr) => {\n  //   const newData = sortByUsername(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n\n  // const sortLastName = (arr) => {\n  //   const newData = sortByLastName(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n\n  // const sortDOB = (arr) => {\n  //   const newData = sortByDOB(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n\n  // const sortState = (arr) => {\n  //   const newData = sortByState(arr);\n  //   setUglyData(newData);\n  //   return newData;\n  // };\n\n  // step 2\n  // const sorter = (arr, type) => {\n  //   let newData;\n  //   switch (type) {\n  //     case \"email\":\n  //       newData = sortByEmail(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"username\":\n  //       newData = sortByUsername(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"lastName\":\n  //       newData = sortByLastName(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"dob\":\n  //       sortByDOB(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     case \"state\":\n  //       sortByState(arr);\n  //       setUglyData(newData);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   return newData;\n  // };\n\n  // step 3\n  const sortGeneric = (arr, key) => {\n    const newData = sortByKey(arr, key);\n    setUglyData(newData);\n    return newData;\n  };\n\n  const filterGeneric = () => {\n    const newData = filterByNameEmail(uglyData, optionsState);\n    setUglyData(newData);\n    return newData;\n  }\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setOptionsState(e.target.value);\n    return e.target.value;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newData = filterGeneric();\n    return newData;\n  }\n\n  return (\n    // ADD className VALUE IN STEP 1.1\n    <div className=\"container\">\n      <h1 id=\"main-header\">List of Users</h1>\n\n      {/* comment in buttons as the associated function is worked on */}\n      <div className='button-container nav-bar'>\n        <button  className='button-key-cleaner'onClick={() => keyCleaner([...uglyData])}>\n          Clean unformatted string values\n        </button>\n\n        <button className='button-date-cleaner'onClick={() => dateCleaner([...uglyData])}>\n          Fix date values\n        </button>\n\n        <form onSubmit={onSubmit}>\n          {/* <select value={optionsState} onChange={handleSelectChange}>\n            <option value=\"\"></option>\n            <option value=\"email\">email</option>\n            <option value=\"username\">username</option>\n            <option value=\"lastName\">last name</option>\n            <option value=\"dob\">date of birth</option>\n            <option value=\"state\">state</option>\n          </select> */}\n          <input onChange={handleChange} placeholder='type here!' />\n          <button className='button-submit' type=\"submit\">Search</button>\n        </form>\n\n        <button className='button-reset' onClick={() => resetData()}>\n          Reset data\n        </button>\n      </div>\n{/* \n      <div className=\"button-container\">\n        <button onClick={() => sortEmail([...uglyData])}>\n          Sort data by email\n        </button>\n        <button onClick={() => sortUsername([...uglyData])}>\n          Sort data by username\n        </button>\n        <button onClick={() => sortLastName([...uglyData])}>\n          Sort data by last name\n        </button>\n        <button onClick={() => sortDOB([...uglyData])}>\n          Sort data by dob\n        </button>\n        <button onClick={() => sortState([...uglyData])}>\n          Sort data by state\n        </button>\n      </div> */}\n\n      {/* <div className=\"button-container\">\n        <button onClick={() => sorter([...uglyData], 'email')}>\n          Sort data by email\n        </button>\n        <button onClick={() => sorter([...uglyData], 'username')}>\n          Sort data by username\n        </button>\n        <button onClick={() => sorter([...uglyData], 'lastName')}>\n          Sort data by last name\n        </button>\n        <button onClick={() => sorter([...uglyData], 'dob')}>\n          Sort data by dob\n        </button>\n        <button onClick={() => sorter([...uglyData], 'state')}>\n          Sort data by state\n        </button>\n      </div> */}\n\n      <div className='button-container nav-bar'>\n        <button onClick={() => sortGeneric([...uglyData], 'email')}>\n          Sort data by email\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], 'username')}>\n          Sort data by username\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], 'lastName')}>\n          Sort data by last name\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], 'dob')}>\n          Sort data by dob\n        </button>\n        <button onClick={() => sortGeneric([...uglyData], 'state')}>\n          Sort data by state\n        </button>\n      </div>\n\n      <div className=\"users-container\">\n        {uglyData.map((user) => {\n          return <User key={user.id} user={user} />;\n        })}\n      </div>\n\n      <p className=\"rtt\" onClick={rtt}>Return to Top</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}