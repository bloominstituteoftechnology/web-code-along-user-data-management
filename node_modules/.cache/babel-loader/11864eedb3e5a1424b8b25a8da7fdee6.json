{"ast":null,"code":"export const sortByUsername = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.username === null || a.username === \"\") {\n      return -2;\n    } else if (a.username === null || b.username === \"\") {\n      return -2;\n    }\n\n    let strippedA = a.username;\n    let strippedB = b.username;\n\n    if (strippedA < strippedB) {\n      return -1;\n    } else if (strippedA > strippedB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByLastName = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const lNameA = a.profile.name.split(\" \")[1].trim();\n    const lNameB = b.profile.name.split(\" \")[1].trim();\n\n    if (lNameA < lNameB) {\n      return -1;\n    } else if (lNameA > lNameB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByDOB = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.profile.dob < b.profile.dob) {\n      return -1;\n    } else if (a.profile.dob > b.profile.dob) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByState = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const stateA = a.profile.address.split(\",\")[2].trim();\n    const stateB = b.profile.address.split(\",\")[2].trim();\n\n    if (stateA < stateB) {\n      return -1;\n    } else if (stateA > stateB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByEmail = arr => {\n  const newArr = [...arr];\n  const filtered = [];\n  const empty = [];\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i].email === null) {\n      empty.push(newArr[i]);\n    } else {\n      filtered.push(newArr[i]);\n    }\n  }\n\n  const sorter = filtered.sort((a, b) => {\n    if (a.email !== null && b.email !== null) {\n      const emailA = a.email.split(\"@\")[0] || null;\n      const emailB = b.email.split(\"@\")[0] || null;\n\n      if (emailA < emailB) {\n        return -1;\n      } else if (emailA > emailB) {\n        return 1;\n      } else return 0;\n    }\n  });\n  const returnVal = [...empty, ...sorter];\n  return returnVal;\n};\nexport const sortByKey = (arr, key) => {\n  let returnVal;\n\n  switch (key) {\n    case \"email\":\n      returnVal = sortByEmail(arr);\n      break;\n\n    case \"username\":\n      returnVal = sortByUsername(arr);\n      break;\n\n    case \"lastName\":\n      returnVal = sortByLastName(arr);\n      break;\n\n    case \"dob\":\n      returnVal = sortByDOB(arr);\n      break;\n\n    case \"state\":\n      returnVal = sortByState(arr);\n      break;\n\n    default:\n      returnVal = arr;\n      break;\n  }\n\n  return returnVal;\n};","map":{"version":3,"sources":["/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/utils/sorting.js"],"names":["sortByUsername","arr","newArr","sorter","sort","a","b","username","strippedA","strippedB","sortByLastName","lNameA","profile","name","split","trim","lNameB","sortByDOB","dob","sortByState","stateA","address","stateB","sortByEmail","filtered","empty","i","length","email","push","emailA","emailB","returnVal","sortByKey","key"],"mappings":"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","sourcesContent":["export const sortByUsername = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.username === null || a.username === \"\") {\n      return -2;\n    } else if (a.username === null || b.username === \"\") {\n      return -2;\n    }\n\n    let strippedA = a.username;\n    let strippedB = b.username;\n\n    if (strippedA < strippedB) {\n      return -1;\n    } else if (strippedA > strippedB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByLastName = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const lNameA = a.profile.name.split(\" \")[1].trim();\n    const lNameB = b.profile.name.split(\" \")[1].trim();\n\n    if (lNameA < lNameB) {\n      return -1;\n    } else if (lNameA > lNameB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByDOB = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.profile.dob < b.profile.dob) {\n      return -1;\n    } else if (a.profile.dob > b.profile.dob) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByState = (arr) => {\n  const newArr = [...arr];\n\n  const sorter = newArr.sort((a, b) => {\n    const stateA = a.profile.address.split(\",\")[2].trim();\n    const stateB = b.profile.address.split(\",\")[2].trim();\n    if (stateA < stateB) {\n      return -1;\n    } else if (stateA > stateB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByEmail = (arr) => {\n  const newArr = [...arr];\n\n  const filtered = [];\n  const empty = [];\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i].email === null) {\n      empty.push(newArr[i]);\n    } else {\n      filtered.push(newArr[i]);\n    }\n  }\n\n  const sorter = filtered.sort((a, b) => {\n    if (a.email !== null && b.email !== null) {\n      const emailA = a.email.split(\"@\")[0] || null;\n      const emailB = b.email.split(\"@\")[0] || null;\n\n      if (emailA < emailB) {\n        return -1;\n      } else if (emailA > emailB) {\n        return 1;\n      } else return 0;\n    }\n  });\n\n  const returnVal = [...empty, ...sorter];\n\n  return returnVal;\n};\n\nexport const sortByKey = (arr, key) => {\n  let returnVal;\n  switch (key) {\n    case \"email\":\n      returnVal = sortByEmail(arr);\n      break;\n    case \"username\":\n      returnVal = sortByUsername(arr);\n      break;\n    case \"lastName\":\n      returnVal = sortByLastName(arr);\n      break;\n    case \"dob\":\n      returnVal = sortByDOB(arr);\n      break;\n    case \"state\":\n      returnVal = sortByState(arr);\n      break;\n    default:\n      returnVal = arr;\n      break;\n  }\n\n  return returnVal;\n};\n"]},"metadata":{},"sourceType":"module"}