{"ast":null,"code":"export const sortByEmail = arr => {\n  const newArr = [...arr]; // const filter = newArr.filter((user) => {\n  //     return user.email !== null || user.email !== '' || user.email !== undefined;\n  // });\n\n  const filtered = [];\n  const empty = [];\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i].email === null) {\n      empty.push(newArr[i]);\n    } else {\n      filtered.push(newArr[i]);\n    }\n  } // console.log(filter);\n  // const empties = newArr.filter((user) => {\n  //     return user.email === null || user.email === '' || user.email === undefined;\n  // });\n  // console.log(empties);\n\n\n  const sorter = filtered.sort((a, b) => {\n    if (a.email !== null && b.email !== null) {\n      const emailA = a.email.split('@')[0] || null;\n      const emailB = b.email.split('@')[0] || null;\n\n      if (emailA < emailB) {\n        return -1;\n      } else if (emailA > emailB) {\n        return 1;\n      } else return 0;\n    }\n  });\n  const returnVal = [...empty, ...sorter];\n  return returnVal;\n};\nexport const sortByUsername = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.username === null || a.username === '') {\n      return -2;\n    } else if (a.username === null || b.username === '') {\n      return -2;\n    }\n\n    let strippedA = a.username;\n    let strippedB = b.username;\n\n    if (strippedA < strippedB) {\n      return -1;\n    } else if (strippedA > strippedB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByLastName = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const lNameA = a.profile.name.split(' ')[1].trim();\n    const lNameB = b.profile.name.split(' ')[1].trim();\n\n    if (lNameA < lNameB) {\n      return -1;\n    } else if (lNameA > lNameB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByDOB = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.profile.dob < b.profile.dob) {\n      return -1;\n    } else if (a.profile.dob > b.profile.dob) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByState = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const stateA = a.profile.address.split(',')[2].trim();\n    const stateB = b.profile.address.split(',')[2].trim();\n\n    if (stateA < stateB) {\n      return -1;\n    } else if (stateA > stateB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByKey = (arr, key) => {\n  let returnVal;\n\n  switch (key) {\n    case 'email':\n      returnVal = sortByEmail(arr);\n      break;\n\n    case 'username':\n      returnVal = sortByUsername(arr);\n      break;\n\n    case 'lastName':\n      returnVal = sortByLastName(arr);\n      break;\n\n    case 'dob':\n      returnVal = sortByDOB(arr);\n      break;\n\n    case 'state':\n      returnVal = sortByState(arr);\n      break;\n  }\n\n  return returnVal;\n};","map":{"version":3,"sources":["/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/utils/sorting.js"],"names":["sortByEmail","arr","newArr","filtered","empty","i","length","email","push","sorter","sort","a","b","emailA","split","emailB","returnVal","sortByUsername","username","strippedA","strippedB","sortByLastName","lNameA","profile","name","trim","lNameB","sortByDOB","dob","sortByState","stateA","address","stateB","sortByKey","key"],"mappings":"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","sourcesContent":["export const sortByEmail = (arr) => {\n    const newArr = [...arr];\n    // const filter = newArr.filter((user) => {\n    //     return user.email !== null || user.email !== '' || user.email !== undefined;\n    // });\n\n    const filtered = [];\n    const empty = [];\n    for(let i = 0; i < newArr.length; i++) {\n        if(newArr[i].email === null) {\n            empty.push(newArr[i]);\n        } else {\n            filtered.push(newArr[i]);\n        }\n    }\n\n    // console.log(filter);\n    // const empties = newArr.filter((user) => {\n    //     return user.email === null || user.email === '' || user.email === undefined;\n    // });\n    // console.log(empties);\n    const sorter = filtered.sort((a, b) => {\n        if(a.email !== null && b.email !== null) {\n            const emailA = a.email.split('@')[0] || null;\n            const emailB = b.email.split('@')[0] || null;\n\n            if(emailA < emailB) {\n                return -1;\n            } else if (emailA > emailB) {\n                return 1;\n            } else return 0;\n        }\n    });\n\n    const returnVal = [...empty, ...sorter];\n\n    return returnVal;\n}\n\nexport const sortByUsername = (arr) => {\n    const newArr = [...arr];\n    const sorter = newArr.sort((a, b) => {\n        if(a.username === null || a.username === '') {\n            return -2;\n        } else if(a.username === null || b.username === '') {\n            return -2;\n        }\n\n        let strippedA = a.username;\n        let strippedB = b.username;\n\n        if(strippedA < strippedB) {\n            return -1;\n        } else if (strippedA > strippedB) {\n            return 1;\n        } else return 0;\n    });\n\n    return sorter;\n}\n\nexport const sortByLastName = (arr) => {\n    const newArr = [...arr];\n    const sorter = newArr.sort((a, b) => {\n        const lNameA = a.profile.name.split(' ')[1].trim();\n        const lNameB = b.profile.name.split(' ')[1].trim();\n\n        if(lNameA < lNameB) {\n            return -1;\n        } else if (lNameA > lNameB) {\n            return 1;\n        } else return 0;\n    });\n\n    return sorter;\n}\n\nexport const sortByDOB = (arr) => {\n    const newArr = [...arr];\n    const sorter = newArr.sort((a, b) => {\n        if(a.profile.dob < b.profile.dob) {\n            return -1;\n        } else if (a.profile.dob > b.profile.dob) {\n            return 1;\n        } else return 0;\n    });\n\n    return sorter;\n}\n\nexport const sortByState = (arr) => {\n    const newArr = [...arr];\n    \n    const sorter = newArr.sort((a, b) => {\n        const stateA = a.profile.address.split(',')[2].trim();\n        const stateB = b.profile.address.split(',')[2].trim();\n        if(stateA < stateB) {\n            return -1;\n        } else if (stateA > stateB) {\n            return 1;\n        } else return 0;\n    });\n\n    return sorter;\n}\n\nexport const sortByKey = (arr, key) => {\n    let returnVal;\n    switch(key) {\n        case 'email':\n            returnVal = sortByEmail(arr);\n            break;\n        case 'username':\n            returnVal = sortByUsername(arr);\n            break;\n        case 'lastName':\n            returnVal = sortByLastName(arr);\n            break;\n        case 'dob':\n            returnVal = sortByDOB(arr);\n            break;\n        case 'state':\n            returnVal = sortByState(arr);\n            break;\n    }\n\n    return returnVal;\n}\n"]},"metadata":{},"sourceType":"module"}