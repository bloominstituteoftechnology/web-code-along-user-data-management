{"ast":null,"code":"export const sortByUsername = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.username === null || a.username === \"\") {\n      return -2;\n    } else if (a.username === null || b.username === \"\") {\n      return -2;\n    }\n\n    let strippedA = a.username;\n    let strippedB = b.username;\n\n    if (strippedA < strippedB) {\n      return -1;\n    } else if (strippedA > strippedB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByLastName = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const lNameA = a.profile.name.split(\" \")[1].trim();\n    const lNameB = b.profile.name.split(\" \")[1].trim();\n\n    if (lNameA < lNameB) {\n      return -1;\n    } else if (lNameA > lNameB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByDOB = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.profile.dob < b.profile.dob) {\n      return -1;\n    } else if (a.profile.dob > b.profile.dob) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n};\nexport const sortByState = arr => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const stateA = a.profile.address.split(\",\")[2].trim();\n    const stateB = b.profile.address.split(\",\")[2].trim();\n\n    if (stateA < stateB) {\n      return -1;\n    } else if (stateA > stateB) {\n      return 1;\n    } else return 0;\n  });\n  return sorter;\n}; // function sortByEmail(arr) {\n// const newArr = [];\n// const sorter = filtered.sort((a, b) => {\n//   if (a.email !== null && b.email !== null) {\n//     const emailA = a.email.split(\"@\")[0] || null;\n//     const emailB = b.email.split(\"@\")[0] || null;\n//     if (emailA < emailB) {\n//       return -1;\n//     } else if (emailA > emailB) {\n//       return 1;\n//     } else return 0;\n//   }\n// });\n// }\n\nexport const sortByEmail = arr => {\n  const newArr = [...arr];\n  console.log('Checking if this is running or not.');\n  const filtered = [];\n\n  for (let i = 0; i < newArr.length; i++) {\n    if (newArr[i].email === null) {\n      console.log(newArr[i]);\n    }\n  }\n\n  const sorter = filtered.sort((a, b) => {\n    if (a.email !== null && b.email !== null) {\n      const emailA = a.email.split(\"@\")[0] || null;\n      const emailB = b.email.split(\"@\")[0] || null;\n\n      if (emailA < emailB) {\n        return -1;\n      } else if (emailA > emailB) {\n        return 1;\n      } else return 0;\n    }\n  });\n  return sorter;\n};\nexport const sortByKey = arr => {};","map":{"version":3,"sources":["/Users/keirankozlowski/BloomTech-Repos/Unit-1/Code-Alongs/web-code-along-user-data-management/src/utils/sorting.js"],"names":["sortByUsername","arr","newArr","sorter","sort","a","b","username","strippedA","strippedB","sortByLastName","lNameA","profile","name","split","trim","lNameB","sortByDOB","dob","sortByState","stateA","address","stateB","sortByEmail","console","log","filtered","i","length","email","emailA","emailB","sortByKey"],"mappings":"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","sourcesContent":["export const sortByUsername = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.username === null || a.username === \"\") {\n      return -2;\n    } else if (a.username === null || b.username === \"\") {\n      return -2;\n    }\n\n    let strippedA = a.username;\n    let strippedB = b.username;\n\n    if (strippedA < strippedB) {\n      return -1;\n    } else if (strippedA > strippedB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByLastName = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    const lNameA = a.profile.name.split(\" \")[1].trim();\n    const lNameB = b.profile.name.split(\" \")[1].trim();\n\n    if (lNameA < lNameB) {\n      return -1;\n    } else if (lNameA > lNameB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByDOB = (arr) => {\n  const newArr = [...arr];\n  const sorter = newArr.sort((a, b) => {\n    if (a.profile.dob < b.profile.dob) {\n      return -1;\n    } else if (a.profile.dob > b.profile.dob) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\nexport const sortByState = (arr) => {\n  const newArr = [...arr];\n\n  const sorter = newArr.sort((a, b) => {\n    const stateA = a.profile.address.split(\",\")[2].trim();\n    const stateB = b.profile.address.split(\",\")[2].trim();\n    if (stateA < stateB) {\n      return -1;\n    } else if (stateA > stateB) {\n      return 1;\n    } else return 0;\n  });\n\n  return sorter;\n};\n\n// function sortByEmail(arr) {\n  // const newArr = [];\n\n  // const sorter = filtered.sort((a, b) => {\n  //   if (a.email !== null && b.email !== null) {\n  //     const emailA = a.email.split(\"@\")[0] || null;\n  //     const emailB = b.email.split(\"@\")[0] || null;\n\n  //     if (emailA < emailB) {\n  //       return -1;\n  //     } else if (emailA > emailB) {\n  //       return 1;\n  //     } else return 0;\n  //   }\n  // });\n// }\n\nexport const sortByEmail = (arr) => {\n  const newArr = [...arr];\n  console.log('Checking if this is running or not.');\n\n  const filtered = [];\n  for(let i = 0; i < newArr.length; i++) {\n    if(newArr[i].email === null) {\n      console.log(newArr[i]);\n    }\n  }\n\n  const sorter = filtered.sort((a, b) => {\n    if (a.email !== null && b.email !== null) {\n      const emailA = a.email.split(\"@\")[0] || null;\n      const emailB = b.email.split(\"@\")[0] || null;\n\n      if (emailA < emailB) {\n        return -1;\n      } else if (emailA > emailB) {\n        return 1;\n      } else return 0;\n    }\n  });\n  \n  return sorter;\n};\n\nexport const sortByKey = (arr) => {\n  \n};\n"]},"metadata":{},"sourceType":"module"}